(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{104:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),l=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,b=u["".concat(i,".").concat(m)]||u[m]||d[m]||a;return n?o.a.createElement(b,c(c({ref:t},p),{},{components:n})):o.a.createElement(b,c({ref:t},p))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},71:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(2),o=n(6),a=(n(0),n(104)),i={id:"routing",title:"Routing"},c={unversionedId:"guides/routing",id:"guides/routing",isDocsHomePage:!1,title:"Routing",description:"You can use React Router to render links and routes to add interactivity to your pages.",source:"@site/docs/guides/routing.mdx",slug:"/guides/routing",permalink:"/homeflowjs-docs/docs/guides/routing",editUrl:"https://github.com/homeflow/homeflowjs-docs/edit/master/docs/guides/routing.mdx",version:"current",sidebar:"someSidebar",previous:{title:"Carousels",permalink:"/homeflowjs-docs/docs/guides/carousels"},next:{title:"Forms",permalink:"/homeflowjs-docs/docs/guides/forms"}},s=[],p={rightToc:s};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"You can use React Router to render links and routes to add interactivity to your pages."),Object(a.b)("p",null,"Here is an example of how you might render some tabs to allow the user to switch between a normal property map and streetview on the property show page:"),Object(a.b)("p",null,"In this slightly contrived example we are rendering the tabs and the map into separate adjacent ",Object(a.b)("inlineCode",{parentName:"p"},"<div>")," elements. Normally you would render a single React component containing both the tabs and the routes, but we wanted to demonstrate how this could work if these elements needed to be rendered in different parts of the page."),Object(a.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"As long as you wrap your top-level component in the ",Object(a.b)("inlineCode",{parentName:"p"},"withHomeflowState()")," HOC before rendering, it will automatically be wrapped in a ",Object(a.b)("inlineCode",{parentName:"p"},"HashRouter")," from React Router, so this can be omitted."))),Object(a.b)("p",null,"In your HTML:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-html"}),'<div id="property-map-tabs"></div>\n\n<div id="property-map"></div>\n')),Object(a.b)("p",null,"In your JS:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),'import React from \'react\';\nimport ReactDOM from \'react-dom\';\nimport {\n  Switch,\n  Route,\n  NavLink,\n} from \'react-router-dom\';\n\nimport { withHomeflowState } from \'homeflowjs\';\nimport { PropertyMap, PropertyStreetview } from \'homeflowjs/properties\';\n\nconst PropertyMapTabs = () => (\n  <ul className="tabs">\n    <li>\n      <NavLink\n        activeClassName="active"\n        to="/"\n        exact\n      >\n        Map\n      </NavLink>\n    </li>\n\n    <li>\n      <NavLink\n        activeClassName="active"\n        to="/streetview"\n        exact\n      >\n        Streetview\n      </NavLink>\n    </li>\n  </ul>\n);\n\nconst CustomPropertyMap = () => (\n  <Switch>\n    <Route path="/streetview">\n      <PropertyStreetview className="property-streetview" />\n    </Route>\n\n    <Route path="/">\n      <PropertyMap\n        custom="simple_bw"\n      />\n    </Route>\n  </Switch>\n);\n\nwindow.addEventListener(\'DOMContentLoaded\', () => {\n  ReactDOM.render(\n    withHomeflowState(PropertyMapTabs),\n    document.getElementById(\'property-map-tabs\'),\n  );\n\n  ReactDOM.render(\n    withHomeflowState(CustomPropertyMap),\n    document.getElementById(\'property-map\'),\n  );\n});\n')),Object(a.b)("p",null,"The value passed for the ",Object(a.b)("inlineCode",{parentName:"p"},"activeClassName")," prop on each ",Object(a.b)("inlineCode",{parentName:"p"},"NavLink")," will be added as a class to the tab ",Object(a.b)("em",{parentName:"p"},"only")," when the given route is active. This allows you to style active tabs differently."))}l.isMDXComponent=!0}}]);