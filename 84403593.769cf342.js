(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{108:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return u}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),s=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},b=function(e){var t=s(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),b=s(n),m=r,u=b["".concat(o,".").concat(m)]||b[m]||h[m]||c;return n?a.a.createElement(u,p(p({ref:t},l),{},{components:n})):a.a.createElement(u,p({ref:t},l))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=m;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var l=2;l<c;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return p})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return s}));var r=n(2),a=n(6),c=(n(0),n(108)),o={id:"branches",title:"Branches"},p={unversionedId:"components/branches",id:"components/branches",isDocsHomePage:!1,title:"Branches",description:"BranchesSearchForm",source:"@site/docs/components/branches.mdx",slug:"/components/branches",permalink:"/homeflowjs-docs/docs/components/branches",editUrl:"https://github.com/homeflow/homeflowjs-docs/edit/master/docs/components/branches.mdx",version:"current",sidebar:"someSidebar",previous:{title:"Retrofitting HomeflowJS to Existing Themes",permalink:"/homeflowjs-docs/docs/getting-started/retrofitting"},next:{title:"Property Search",permalink:"/homeflowjs-docs/docs/components/property-search"}},i=[{value:"<code>BranchesSearchForm</code>",id:"branchessearchform",children:[{value:"Props",id:"props",children:[]}]},{value:"<code>BranchesSearchInput</code>",id:"branchessearchinput",children:[{value:"Props",id:"props-1",children:[]}]},{value:"Adding a custom button to the <code>BranchesSearchInput</code>",id:"adding-a-custom-button-to-the-branchessearchinput",children:[]}],l={rightToc:i};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"branchessearchform"},Object(c.b)("inlineCode",{parentName:"h2"},"BranchesSearchForm")),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"BranchesSearchForm")," component should wrap all fields on your search form."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"import React from 'react';\nimport { BranchesSearchForm } from 'homeflowjs/branches';\n\nconst BranchesSearchFormExample = () => (\n  <BranchesSearchForm>\n    {/* Additional form fields and other JSX will go here */}\n  </BranchesSearchForm>\n);\n")),Object(c.b)("h3",{id:"props"},"Props"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Prop"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"children"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"node"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Additional form fields and other JSX")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"otherProps"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"any"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Additional props i.e className")))),Object(c.b)("h2",{id:"branchessearchinput"},Object(c.b)("inlineCode",{parentName:"h2"},"BranchesSearchInput")),Object(c.b)("p",null,"You will next need to add the ",Object(c.b)("inlineCode",{parentName:"p"},"BranchesSearchInput")," component to the ",Object(c.b)("inlineCode",{parentName:"p"},"BranchesSearchForm")," and a button with ",Object(c.b)("inlineCode",{parentName:"p"},"type='submit'"),", to handle the form Submission."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"import React from 'react';\nimport { BranchesSearchForm, BranchesSearchInput } from 'homeflowjs/branches';\n\nconst BranchesSearchFormExample = () => (\n  <BranchesSearchForm>\n    <BranchesSearchInput\n      placeholder='Enter your location'\n    />\n    <button type='submit' className='button'>\n      Search\n    </button>\n  </BranchesSearchForm>\n);\n")),Object(c.b)("h3",{id:"props-1"},"Props"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Prop"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Placeholder"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"string"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Placeholder text for the input")))),Object(c.b)("h2",{id:"adding-a-custom-button-to-the-branchessearchinput"},"Adding a custom button to the ",Object(c.b)("inlineCode",{parentName:"h2"},"BranchesSearchInput")),Object(c.b)("p",null,"Lets say we wanted to add another button to clear our ",Object(c.b)("inlineCode",{parentName:"p"},"BranchesSearchInput"),",\nfor example we want the input to have a close icon for the user to clear\nthe data in the input. First we need to import ",Object(c.b)("inlineCode",{parentName:"p"},"connect")," and ",Object(c.b)("inlineCode",{parentName:"p"},"setBranchesSearch")," as the ",Object(c.b)("inlineCode",{parentName:"p"},"BranchesSearchInput")," is connected to redux. By adding an ",Object(c.b)("inlineCode",{parentName:"p"},"onClick={handleClear}")," to our clear button that fires ",Object(c.b)("inlineCode",{parentName:"p"},"setBranchesSearch")," with an empty string as it argument, we can clear the ",Object(c.b)("inlineCode",{parentName:"p"},"BranchesSearchInput"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setBranchesSearch } from 'homeflowjs/actions/branches.actions';\nimport { BranchesSearchForm, BranchesSearchInput } from 'homeflowjs/branches';\n\nconst BranchesSearchFormExample = ({ setBranchesSearch }) => {\n  const handleClear = () => {\n    setBranchesSearch('');\n  };\n  return (\n    <BranchesSearchForm>\n      <div>\n        <BranchesSearchInput\n          placeholder='Enter your location'\n        />\n        <button type='button' onClick={handleClear}>\n          Close icon\n        </button>\n      </div>\n      <button type='submit' className='button'>\n        Search\n      </button>\n    </BranchesSearchForm>\n  );\n};\n\nBranchesSearchExample.propTypes = {\n  setBranchesSearch: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  setBranchesSearch,\n};\n\nexport default connect(null, mapDispatchToProps)(BranchesSearchExample);\n")))}s.isMDXComponent=!0}}]);